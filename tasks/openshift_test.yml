- block:
  - name: Check curl command is working
    uri:
      url: "http://{{ route_cmd.stdout }}"
      return_content: yes
      status_code: 200
      body_format: json
    retries: 10
    delay: 10
    register: curl_output
    ignore_errors: yes
    until: curl_output.status == 200

  - name: Check proper output in json
    debug:
      var: curl_output

  - name: Set test was not successful
    xml:
      path: "{{ xml_file }}"
      xpath: '/rhscl-testing/testsuite/testcase'
      pretty_print: yes
      add_children:
        - test_result: "1"
        - test_url: "{{ curl_output.url }}"
        - test_msg: "{{ curl_output.msg }}"
    when: '"{{ stuff.check_curl_output }}" not in curl_output["content"]'

  - name: Set test was successful
    xml:
      path: "{{ xml_file }}"
      xpath: '/rhscl-testing/testsuite/testcase'
      pretty_print: yes
      add_children:
        - test_result: "0"
        - test_url: "{{ curl_output.url }}"
        - test_msg: "{{ curl_output.msg }}"
    when: '"{{ stuff.check_curl_output }}" in curl_output["content"]'

  when: (stuff.check_curl_output is defined)

- block:
  - name: Running test in pod by oc exec
    shell: "{{ stuff.test_exec_command }} {{ cluster_name.stdout }} '{{ stuff.expected_exec_result }}'"
    ignore_errors: yes
    register: command_out
    retries: 10
    delay: 10
    until: command_out.rc == 0

  - name: Set test was not successful
    xml:
      path: "{{ xml_file }}"
      xpath: '/rhscl-testing/testsuite/testcase'
      pretty_print: yes
      add_children:
        - test_result: "1"
        - test_url: "{{ stuff.test_exec_command }}"
        - test_msg: "{{ stuff.expected_exec_result }}"
    when: command_out.rc != 0

  - name: Set test was successful
    xml:
      path: "{{ xml_file }}"
      xpath: '/rhscl-testing/testsuite/testcase'
      pretty_print: yes
      add_children:
        - test_result: "0"
        - test_url: "{{ stuff.test_exec_command }}"
        - test_msg: "{{ stuff.expected_exec_result }}"
    when: command_out.rc == 0

  when: (stuff.test_exec_command is defined)

